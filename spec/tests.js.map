{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","js/card.js","js/enemy.js","js/planeswalker.js","js/tests.js"],"names":[],"mappings":"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","file":"tests.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","let Card = function (stats) {\n  stats = stats || {};\n  this.editions = stats.editions[0].image_url;\n  this.name = stats.name;\n  this.power = stats.power;\n  this.toughness = stats.toughness;  \n};\n\nCard.prototype.toString = function () {\n\treturn `\n\t\t\t<img src=\"${this.editions}\">\n\t\t\t`;\n};\n\nexport default Card;","\nlet Enemy = function () {\n  this.health = 40;\n  this.cards = function () {\n  \t\n  };\n  this.hit = function (num) {\n    let hitPoints = num || 10;\n    return this.health = this.health - hitPoints;\n  };\n};\n\nexport default Enemy;","\nlet Planeswalker = function () {\n  this.health = 40;\n  this.cards = function () {\n\n  };\n  this.hit = function (num) {\n    let hitPoints = num || 10;\n    return this.health = this.health - hitPoints;\n  };\n};\n\nexport default Planeswalker;","import Planeswalker from './planeswalker';\nimport Enemy from './enemy';\nimport Card from './card';\n\n(function() {\n  'use strict';\n\n  describe('About the Planeswalker', function() {\n\n    beforeEach( function() {\n      window.x = new Planeswalker();\n    });\n\n    describe('creating a Planeswalker', function() {\n      it('should create an instance of Planeswalker', function () {\n        expect(x instanceof Planeswalker).to.equal(true);\n      });\n    });\n\n    describe('my player health', function() {\n      it('should have full health upon creation', function() {\n        expect(x.health).to.equal(40);\n      });\n    });\n\n    describe('player taking damage', function() {\n      it('should lower the score, after getting hit', function() {\n        x.hit();\n        expect(x.health).to.be.below(40);\n      });\n    });\n\n    describe('player has cards', function() {\n    \tit('should have a unique deck of cards', function() {\n\n    \t});\n    });\n\n  });\n\n  describe('About the Enemy', function() {\n\n\t  beforeEach( function() {\n\t    window.x = new Enemy();\n\t  });\n\n\t  describe('creating an Enemy', function() {\n\t    it('should create an instance of Enemy', function () {\n\t      expect(x instanceof Enemy).to.equal(true);\n\t    });\n\t  });\n\n\t  describe('enemy health', function() {\n\t    it('should have full health upon creation', function() {\n\t      expect(x.health).to.equal(40);\n\t    });\n\t  });\n\n\t  describe('enemy taking damage', function() {\n\t    it('should lower the score, after getting hit', function() {\n\t      x.hit();\n\t      expect(x.health).to.be.below(40);\n\t    })\n\t  });\n\n    describe('player has cards', function() {\n    \tit('should have a unique deck of cards', function() {\n\n    \t});\n    });\n\n});\n\n  describe('About the Card', function() {\n\n  \tbeforeEach( function() {\n  \t\twindow.x = new Card();\n  \t});\n\n  \tdescribe('create a deck of cards', function() {\n  \t\tit('should create an instance of a deck of cards', function () {\n  \t\t\texpect(x instanceof Card).to.equal(true);\n  \t\t});\n  \t});\n\n  });\n\n}());\n\n\n// Planeswalker\n\n// Enemy\n\n// Both will have a unique deck of cards\n// Both will have attack methods\n// Both will have health"]}